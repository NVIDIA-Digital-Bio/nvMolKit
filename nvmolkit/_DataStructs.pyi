from typing import Dict, List, Optional, Union
import torch
from rdkit.DataStructs import ExplicitBitVect
from nvmolkit.types import AsyncGpuResult

def BulkTanimotoSimilarity(fp1: ExplicitBitVect, fp2: List[ExplicitBitVect], backend: str = "gpu") -> List[float]: ...

def BulkCosineSimilarity(fp1: ExplicitBitVect, fp2: List[ExplicitBitVect], backend: str = "gpu") -> List[float]: ...

def BulkTanimotoSimilarityRawBuffers(fp1: Dict, fp2: Dict) -> AsyncGpuResult: ...

def BulkCosineSimilarityRawBuffers(fp1: Dict, fp2: Dict) -> AsyncGpuResult: ...

def CrossTanimotoSimilarityRawBuffers(fp1: Dict, fp2: Dict) -> AsyncGpuResult: ...

def CrossCosineSimilarityRawBuffers(fp1: Dict, fp2: Dict) -> AsyncGpuResult: ...
