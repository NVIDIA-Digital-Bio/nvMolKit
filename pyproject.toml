[build-system]
requires = [
    "scikit-build>=0.18",
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "nvMolKit"
version = "0.1.0"
description = "Python bindings for the nvMolKit project"


dependencies = [
    "numpy",
    "torch",
]

[project.optional-dependencies]
test = [
    "pytest",
    "ruff",
]
docs = [
    "sphinx",
    "nvidia-sphinx-theme",
    "autodocsumm",
    "myst-parser",
    "jupyter-sphinx",
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

addopts = "-rfEX --strict-markers"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test"]
python_functions = ["test"]
xfail_strict = true

[tool.ruff]
line-length = 119
include = ["nvmolkit/tests/conftest.py"]

[tool.ruff.lint]
ignore = [
    "C901",    # Checks for functions with a high McCabe complexity. 
    "D100",    # Checks for undocumented public module definitions.
    "E501",    # Checks for lines that exceed the specified maximum character length.
    "E741",    # Checks for the use of the characters 'l', 'O', or 'I' as variable names.
    "RUF005",  # Checks for uses of the + operator to concatenate collections.
]
select = [
    "C",   # Pylint conventions
    "D",   # Documentation formatting
    "E",   # style stuff, whitespaces
    "F",   # important pyflakes lints
    "I",   # import sorting
    "RUF", # Some Ruff-specific lints, unused noqas, etc.
    "W",   # Pylint warnings
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]
"nvmolkit/tests/test_*.py" = ["D103"]
"benchmarks/*.py" = ["F841", "D103"]

[tool.ruff.lint.isort]
lines-after-imports = 1

[tool.ruff.lint.pydocstyle]
convention = "google"
